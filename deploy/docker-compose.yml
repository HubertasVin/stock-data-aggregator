services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - ./api.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s
    networks:
      - appnet

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./api.env
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:5077
      MIGRATE_ON_STARTUP: "true"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "5077"
    networks:
      appnet:
        aliases:
          - api

  web:
    build:
      context: ..
      dockerfile: ./frontend/Dockerfile
    restart: unless-stopped
    ports:
      - "8089:80"
    depends_on:
      - api
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
